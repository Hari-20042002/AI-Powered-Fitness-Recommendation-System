<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.3</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.fitness</groupId>
	<artifactId>userservice</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>userservice</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<!--
          IMPORTANT: You mentioned Java 24, but your pom specifies 21.
          Jib will use the Java version specified here to select a base image.
          Ensure this matches your intended JDK version.
        -->
		<java.version>21</java.version>
		<spring-cloud.version>2025.0.0</spring-cloud.version>
		<!-- Added lombok.version property -->
		<lombok.version>1.18.32</lombok.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<!-- This is required since lombok is optional -->
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- ======================================================= -->
			<!--      JIB MAVEN PLUGIN FOR CONTAINERIZING                -->
			<!-- ======================================================= -->
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<!-- Updated to the latest version as suggested in the build log -->
				<version>3.4.6</version>
				<configuration>
					<from>
						<!--
                            Base Image: Jib automatically selects a base image matching your Java version.
                            Using Eclipse Temurin is a solid choice. For Java 21, it uses eclipse-temurin:21-jre.
                            You can override it here if needed. e.g., eclipse-temurin:21-jre-jammy
                        -->
						<image>eclipse-temurin:21-jre-jammy</image>
					</from>
					<to>
						<!--
                            Target Image: Replace with your Docker Hub username or private registry.
                            Example: your-docker-repo/userservice
                        -->
						<image>fitness-app/${project.artifactId}:${project.version}</image>
						<tags>
							<tag>latest</tag>
						</tags>
					</to>
					<container>
						<!-- Set the main class for the entrypoint -->
						<mainClass>com.fitness.userservice.UserserviceApplication</mainClass>
						<!-- JVM flags can be configured here -->
						<jvmFlags>
							<jvmFlag>-Xms512m</jvmFlag>
							<jvmFlag>-Xmx1024m</jvmFlag>
						</jvmFlags>
						<!-- Ports to expose from the container -->
						<ports>
							<port>8080</port>
						</ports>
					</container>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>build</goal> <!-- or "dockerBuild" to build to a local Docker daemon -->
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
